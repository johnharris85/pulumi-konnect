// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/johnharris85/pulumi-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Represents authentication settings
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/johnharris85/pulumi-konnect/sdk/go/konnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := konnect.NewAuthenticationSettings(ctx, "example", &konnect.AuthenticationSettingsArgs{
//				BasicAuthEnabled:      pulumi.Bool(true),
//				IdpMappingEnabled:     pulumi.Bool(false),
//				KonnectMappingEnabled: pulumi.Bool(true),
//				OidcAuthEnabled:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Authentication settings can be imported using a proper value of `id` as described above
type AuthenticationSettings struct {
	pulumi.CustomResourceState

	// **(Optional, Boolean)** Whether basic authentication is enabled.
	BasicAuthEnabled pulumi.BoolPtrOutput `pulumi:"basicAuthEnabled"`
	// **(Optional, Boolean)** Whether IDP mapping is enabled.
	IdpMappingEnabled pulumi.BoolPtrOutput `pulumi:"idpMappingEnabled"`
	// **(Optional, Boolean)** Whether Konnect mapping is enabled.
	KonnectMappingEnabled pulumi.BoolPtrOutput `pulumi:"konnectMappingEnabled"`
	// **(Optional, Boolean)** Whether OIDC authentication is enabled.
	OidcAuthEnabled pulumi.BoolPtrOutput `pulumi:"oidcAuthEnabled"`
}

// NewAuthenticationSettings registers a new resource with the given unique name, arguments, and options.
func NewAuthenticationSettings(ctx *pulumi.Context,
	name string, args *AuthenticationSettingsArgs, opts ...pulumi.ResourceOption) (*AuthenticationSettings, error) {
	if args == nil {
		args = &AuthenticationSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthenticationSettings
	err := ctx.RegisterResource("konnect:index/authenticationSettings:AuthenticationSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthenticationSettings gets an existing AuthenticationSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthenticationSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthenticationSettingsState, opts ...pulumi.ResourceOption) (*AuthenticationSettings, error) {
	var resource AuthenticationSettings
	err := ctx.ReadResource("konnect:index/authenticationSettings:AuthenticationSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthenticationSettings resources.
type authenticationSettingsState struct {
	// **(Optional, Boolean)** Whether basic authentication is enabled.
	BasicAuthEnabled *bool `pulumi:"basicAuthEnabled"`
	// **(Optional, Boolean)** Whether IDP mapping is enabled.
	IdpMappingEnabled *bool `pulumi:"idpMappingEnabled"`
	// **(Optional, Boolean)** Whether Konnect mapping is enabled.
	KonnectMappingEnabled *bool `pulumi:"konnectMappingEnabled"`
	// **(Optional, Boolean)** Whether OIDC authentication is enabled.
	OidcAuthEnabled *bool `pulumi:"oidcAuthEnabled"`
}

type AuthenticationSettingsState struct {
	// **(Optional, Boolean)** Whether basic authentication is enabled.
	BasicAuthEnabled pulumi.BoolPtrInput
	// **(Optional, Boolean)** Whether IDP mapping is enabled.
	IdpMappingEnabled pulumi.BoolPtrInput
	// **(Optional, Boolean)** Whether Konnect mapping is enabled.
	KonnectMappingEnabled pulumi.BoolPtrInput
	// **(Optional, Boolean)** Whether OIDC authentication is enabled.
	OidcAuthEnabled pulumi.BoolPtrInput
}

func (AuthenticationSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationSettingsState)(nil)).Elem()
}

type authenticationSettingsArgs struct {
	// **(Optional, Boolean)** Whether basic authentication is enabled.
	BasicAuthEnabled *bool `pulumi:"basicAuthEnabled"`
	// **(Optional, Boolean)** Whether IDP mapping is enabled.
	IdpMappingEnabled *bool `pulumi:"idpMappingEnabled"`
	// **(Optional, Boolean)** Whether Konnect mapping is enabled.
	KonnectMappingEnabled *bool `pulumi:"konnectMappingEnabled"`
	// **(Optional, Boolean)** Whether OIDC authentication is enabled.
	OidcAuthEnabled *bool `pulumi:"oidcAuthEnabled"`
}

// The set of arguments for constructing a AuthenticationSettings resource.
type AuthenticationSettingsArgs struct {
	// **(Optional, Boolean)** Whether basic authentication is enabled.
	BasicAuthEnabled pulumi.BoolPtrInput
	// **(Optional, Boolean)** Whether IDP mapping is enabled.
	IdpMappingEnabled pulumi.BoolPtrInput
	// **(Optional, Boolean)** Whether Konnect mapping is enabled.
	KonnectMappingEnabled pulumi.BoolPtrInput
	// **(Optional, Boolean)** Whether OIDC authentication is enabled.
	OidcAuthEnabled pulumi.BoolPtrInput
}

func (AuthenticationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationSettingsArgs)(nil)).Elem()
}

type AuthenticationSettingsInput interface {
	pulumi.Input

	ToAuthenticationSettingsOutput() AuthenticationSettingsOutput
	ToAuthenticationSettingsOutputWithContext(ctx context.Context) AuthenticationSettingsOutput
}

func (*AuthenticationSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettings)(nil)).Elem()
}

func (i *AuthenticationSettings) ToAuthenticationSettingsOutput() AuthenticationSettingsOutput {
	return i.ToAuthenticationSettingsOutputWithContext(context.Background())
}

func (i *AuthenticationSettings) ToAuthenticationSettingsOutputWithContext(ctx context.Context) AuthenticationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsOutput)
}

func (i *AuthenticationSettings) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationSettings] {
	return pulumix.Output[*AuthenticationSettings]{
		OutputState: i.ToAuthenticationSettingsOutputWithContext(ctx).OutputState,
	}
}

// AuthenticationSettingsArrayInput is an input type that accepts AuthenticationSettingsArray and AuthenticationSettingsArrayOutput values.
// You can construct a concrete instance of `AuthenticationSettingsArrayInput` via:
//
//	AuthenticationSettingsArray{ AuthenticationSettingsArgs{...} }
type AuthenticationSettingsArrayInput interface {
	pulumi.Input

	ToAuthenticationSettingsArrayOutput() AuthenticationSettingsArrayOutput
	ToAuthenticationSettingsArrayOutputWithContext(context.Context) AuthenticationSettingsArrayOutput
}

type AuthenticationSettingsArray []AuthenticationSettingsInput

func (AuthenticationSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthenticationSettings)(nil)).Elem()
}

func (i AuthenticationSettingsArray) ToAuthenticationSettingsArrayOutput() AuthenticationSettingsArrayOutput {
	return i.ToAuthenticationSettingsArrayOutputWithContext(context.Background())
}

func (i AuthenticationSettingsArray) ToAuthenticationSettingsArrayOutputWithContext(ctx context.Context) AuthenticationSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsArrayOutput)
}

func (i AuthenticationSettingsArray) ToOutput(ctx context.Context) pulumix.Output[[]*AuthenticationSettings] {
	return pulumix.Output[[]*AuthenticationSettings]{
		OutputState: i.ToAuthenticationSettingsArrayOutputWithContext(ctx).OutputState,
	}
}

// AuthenticationSettingsMapInput is an input type that accepts AuthenticationSettingsMap and AuthenticationSettingsMapOutput values.
// You can construct a concrete instance of `AuthenticationSettingsMapInput` via:
//
//	AuthenticationSettingsMap{ "key": AuthenticationSettingsArgs{...} }
type AuthenticationSettingsMapInput interface {
	pulumi.Input

	ToAuthenticationSettingsMapOutput() AuthenticationSettingsMapOutput
	ToAuthenticationSettingsMapOutputWithContext(context.Context) AuthenticationSettingsMapOutput
}

type AuthenticationSettingsMap map[string]AuthenticationSettingsInput

func (AuthenticationSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthenticationSettings)(nil)).Elem()
}

func (i AuthenticationSettingsMap) ToAuthenticationSettingsMapOutput() AuthenticationSettingsMapOutput {
	return i.ToAuthenticationSettingsMapOutputWithContext(context.Background())
}

func (i AuthenticationSettingsMap) ToAuthenticationSettingsMapOutputWithContext(ctx context.Context) AuthenticationSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsMapOutput)
}

func (i AuthenticationSettingsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AuthenticationSettings] {
	return pulumix.Output[map[string]*AuthenticationSettings]{
		OutputState: i.ToAuthenticationSettingsMapOutputWithContext(ctx).OutputState,
	}
}

type AuthenticationSettingsOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettings)(nil)).Elem()
}

func (o AuthenticationSettingsOutput) ToAuthenticationSettingsOutput() AuthenticationSettingsOutput {
	return o
}

func (o AuthenticationSettingsOutput) ToAuthenticationSettingsOutputWithContext(ctx context.Context) AuthenticationSettingsOutput {
	return o
}

func (o AuthenticationSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationSettings] {
	return pulumix.Output[*AuthenticationSettings]{
		OutputState: o.OutputState,
	}
}

// **(Optional, Boolean)** Whether basic authentication is enabled.
func (o AuthenticationSettingsOutput) BasicAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettings) pulumi.BoolPtrOutput { return v.BasicAuthEnabled }).(pulumi.BoolPtrOutput)
}

// **(Optional, Boolean)** Whether IDP mapping is enabled.
func (o AuthenticationSettingsOutput) IdpMappingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettings) pulumi.BoolPtrOutput { return v.IdpMappingEnabled }).(pulumi.BoolPtrOutput)
}

// **(Optional, Boolean)** Whether Konnect mapping is enabled.
func (o AuthenticationSettingsOutput) KonnectMappingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettings) pulumi.BoolPtrOutput { return v.KonnectMappingEnabled }).(pulumi.BoolPtrOutput)
}

// **(Optional, Boolean)** Whether OIDC authentication is enabled.
func (o AuthenticationSettingsOutput) OidcAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettings) pulumi.BoolPtrOutput { return v.OidcAuthEnabled }).(pulumi.BoolPtrOutput)
}

type AuthenticationSettingsArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthenticationSettings)(nil)).Elem()
}

func (o AuthenticationSettingsArrayOutput) ToAuthenticationSettingsArrayOutput() AuthenticationSettingsArrayOutput {
	return o
}

func (o AuthenticationSettingsArrayOutput) ToAuthenticationSettingsArrayOutputWithContext(ctx context.Context) AuthenticationSettingsArrayOutput {
	return o
}

func (o AuthenticationSettingsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AuthenticationSettings] {
	return pulumix.Output[[]*AuthenticationSettings]{
		OutputState: o.OutputState,
	}
}

func (o AuthenticationSettingsArrayOutput) Index(i pulumi.IntInput) AuthenticationSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthenticationSettings {
		return vs[0].([]*AuthenticationSettings)[vs[1].(int)]
	}).(AuthenticationSettingsOutput)
}

type AuthenticationSettingsMapOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthenticationSettings)(nil)).Elem()
}

func (o AuthenticationSettingsMapOutput) ToAuthenticationSettingsMapOutput() AuthenticationSettingsMapOutput {
	return o
}

func (o AuthenticationSettingsMapOutput) ToAuthenticationSettingsMapOutputWithContext(ctx context.Context) AuthenticationSettingsMapOutput {
	return o
}

func (o AuthenticationSettingsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AuthenticationSettings] {
	return pulumix.Output[map[string]*AuthenticationSettings]{
		OutputState: o.OutputState,
	}
}

func (o AuthenticationSettingsMapOutput) MapIndex(k pulumi.StringInput) AuthenticationSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthenticationSettings {
		return vs[0].(map[string]*AuthenticationSettings)[vs[1].(string)]
	}).(AuthenticationSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingsInput)(nil)).Elem(), &AuthenticationSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingsArrayInput)(nil)).Elem(), AuthenticationSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingsMapInput)(nil)).Elem(), AuthenticationSettingsMap{})
	pulumi.RegisterOutputType(AuthenticationSettingsOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsMapOutput{})
}

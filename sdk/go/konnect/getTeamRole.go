// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/johnharris85/pulumi-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Represents a role assigned to a team
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/johnharris85/pulumi-konnect/sdk/go/konnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			team, err := konnect.LookupTeam(ctx, &konnect.LookupTeamArgs{
//				Name: pulumi.StringRef("runtime-admin"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = konnect.LookupTeamRole(ctx, &konnect.LookupTeamRoleArgs{
//				TeamId:                team.Id,
//				EntityTypeDisplayName: pulumi.StringRef("Runtime Groups"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTeamRole(ctx *pulumi.Context, args *LookupTeamRoleArgs, opts ...pulumi.InvokeOption) (*LookupTeamRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTeamRoleResult
	err := ctx.Invoke("konnect:index/getTeamRole:getTeamRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeamRole.
type LookupTeamRoleArgs struct {
	// **(Optional, String)** The filter string to apply to the display name of the entity type. Must be `Runtime Groups` or `Services`. Uses equality.
	EntityTypeDisplayName *string `pulumi:"entityTypeDisplayName"`
	// **(Optional, String)** The filter string to apply to the display name of the role. Uses equality.
	RoleDisplayName *string `pulumi:"roleDisplayName"`
	// **(Optional, String)** The search string to apply to the display name of the entity type, like `Runtime Groups` or `Services`. Uses contains.
	SearchEntityTypeDisplayName *string `pulumi:"searchEntityTypeDisplayName"`
	// **(Optional, String)** The search string to apply to the display name of the role. Uses contains.
	SearchRoleDisplayName *string `pulumi:"searchRoleDisplayName"`
	// **(Required, String)** The id of the team assigned the role
	TeamId string `pulumi:"teamId"`
}

// A collection of values returned by getTeamRole.
type LookupTeamRoleResult struct {
	// **(String)** The id of the entity for which the role applies.
	EntityId string `pulumi:"entityId"`
	// **(String)** The region of the entity for which the role applies.
	EntityRegion          string  `pulumi:"entityRegion"`
	EntityTypeDisplayName *string `pulumi:"entityTypeDisplayName"`
	// The provider-assigned unique ID for this managed resource.
	Id                          string  `pulumi:"id"`
	RoleDisplayName             *string `pulumi:"roleDisplayName"`
	SearchEntityTypeDisplayName *string `pulumi:"searchEntityTypeDisplayName"`
	SearchRoleDisplayName       *string `pulumi:"searchRoleDisplayName"`
	TeamId                      string  `pulumi:"teamId"`
}

func LookupTeamRoleOutput(ctx *pulumi.Context, args LookupTeamRoleOutputArgs, opts ...pulumi.InvokeOption) LookupTeamRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTeamRoleResult, error) {
			args := v.(LookupTeamRoleArgs)
			r, err := LookupTeamRole(ctx, &args, opts...)
			var s LookupTeamRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTeamRoleResultOutput)
}

// A collection of arguments for invoking getTeamRole.
type LookupTeamRoleOutputArgs struct {
	// **(Optional, String)** The filter string to apply to the display name of the entity type. Must be `Runtime Groups` or `Services`. Uses equality.
	EntityTypeDisplayName pulumi.StringPtrInput `pulumi:"entityTypeDisplayName"`
	// **(Optional, String)** The filter string to apply to the display name of the role. Uses equality.
	RoleDisplayName pulumi.StringPtrInput `pulumi:"roleDisplayName"`
	// **(Optional, String)** The search string to apply to the display name of the entity type, like `Runtime Groups` or `Services`. Uses contains.
	SearchEntityTypeDisplayName pulumi.StringPtrInput `pulumi:"searchEntityTypeDisplayName"`
	// **(Optional, String)** The search string to apply to the display name of the role. Uses contains.
	SearchRoleDisplayName pulumi.StringPtrInput `pulumi:"searchRoleDisplayName"`
	// **(Required, String)** The id of the team assigned the role
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (LookupTeamRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamRoleArgs)(nil)).Elem()
}

// A collection of values returned by getTeamRole.
type LookupTeamRoleResultOutput struct{ *pulumi.OutputState }

func (LookupTeamRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamRoleResult)(nil)).Elem()
}

func (o LookupTeamRoleResultOutput) ToLookupTeamRoleResultOutput() LookupTeamRoleResultOutput {
	return o
}

func (o LookupTeamRoleResultOutput) ToLookupTeamRoleResultOutputWithContext(ctx context.Context) LookupTeamRoleResultOutput {
	return o
}

func (o LookupTeamRoleResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTeamRoleResult] {
	return pulumix.Output[LookupTeamRoleResult]{
		OutputState: o.OutputState,
	}
}

// **(String)** The id of the entity for which the role applies.
func (o LookupTeamRoleResultOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) string { return v.EntityId }).(pulumi.StringOutput)
}

// **(String)** The region of the entity for which the role applies.
func (o LookupTeamRoleResultOutput) EntityRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) string { return v.EntityRegion }).(pulumi.StringOutput)
}

func (o LookupTeamRoleResultOutput) EntityTypeDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) *string { return v.EntityTypeDisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTeamRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTeamRoleResultOutput) RoleDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) *string { return v.RoleDisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupTeamRoleResultOutput) SearchEntityTypeDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) *string { return v.SearchEntityTypeDisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupTeamRoleResultOutput) SearchRoleDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) *string { return v.SearchRoleDisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupTeamRoleResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamRoleResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTeamRoleResultOutput{})
}

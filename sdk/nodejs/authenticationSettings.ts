// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Represents authentication settings
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as konnect from "@johnharris85/konnect";
 *
 * const example = new konnect.AuthenticationSettings("example", {
 *     basicAuthEnabled: true,
 *     idpMappingEnabled: false,
 *     konnectMappingEnabled: true,
 *     oidcAuthEnabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Authentication settings can be imported using a proper value of `id` as described above
 */
export class AuthenticationSettings extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationSettingsState, opts?: pulumi.CustomResourceOptions): AuthenticationSettings {
        return new AuthenticationSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/authenticationSettings:AuthenticationSettings';

    /**
     * Returns true if the given object is an instance of AuthenticationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationSettings.__pulumiType;
    }

    /**
     * **(Optional, Boolean)** Whether basic authentication is enabled.
     */
    public readonly basicAuthEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * **(Optional, Boolean)** Whether IDP mapping is enabled.
     */
    public readonly idpMappingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * **(Optional, Boolean)** Whether Konnect mapping is enabled.
     */
    public readonly konnectMappingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * **(Optional, Boolean)** Whether OIDC authentication is enabled.
     */
    public readonly oidcAuthEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AuthenticationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AuthenticationSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationSettingsArgs | AuthenticationSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationSettingsState | undefined;
            resourceInputs["basicAuthEnabled"] = state ? state.basicAuthEnabled : undefined;
            resourceInputs["idpMappingEnabled"] = state ? state.idpMappingEnabled : undefined;
            resourceInputs["konnectMappingEnabled"] = state ? state.konnectMappingEnabled : undefined;
            resourceInputs["oidcAuthEnabled"] = state ? state.oidcAuthEnabled : undefined;
        } else {
            const args = argsOrState as AuthenticationSettingsArgs | undefined;
            resourceInputs["basicAuthEnabled"] = args ? args.basicAuthEnabled : undefined;
            resourceInputs["idpMappingEnabled"] = args ? args.idpMappingEnabled : undefined;
            resourceInputs["konnectMappingEnabled"] = args ? args.konnectMappingEnabled : undefined;
            resourceInputs["oidcAuthEnabled"] = args ? args.oidcAuthEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationSettings resources.
 */
export interface AuthenticationSettingsState {
    /**
     * **(Optional, Boolean)** Whether basic authentication is enabled.
     */
    basicAuthEnabled?: pulumi.Input<boolean>;
    /**
     * **(Optional, Boolean)** Whether IDP mapping is enabled.
     */
    idpMappingEnabled?: pulumi.Input<boolean>;
    /**
     * **(Optional, Boolean)** Whether Konnect mapping is enabled.
     */
    konnectMappingEnabled?: pulumi.Input<boolean>;
    /**
     * **(Optional, Boolean)** Whether OIDC authentication is enabled.
     */
    oidcAuthEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AuthenticationSettings resource.
 */
export interface AuthenticationSettingsArgs {
    /**
     * **(Optional, Boolean)** Whether basic authentication is enabled.
     */
    basicAuthEnabled?: pulumi.Input<boolean>;
    /**
     * **(Optional, Boolean)** Whether IDP mapping is enabled.
     */
    idpMappingEnabled?: pulumi.Input<boolean>;
    /**
     * **(Optional, Boolean)** Whether Konnect mapping is enabled.
     */
    konnectMappingEnabled?: pulumi.Input<boolean>;
    /**
     * **(Optional, Boolean)** Whether OIDC authentication is enabled.
     */
    oidcAuthEnabled?: pulumi.Input<boolean>;
}

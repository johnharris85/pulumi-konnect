// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Represents a role
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as konnect from "@pulumi/konnect";
 *
 * const example = konnect.getRole({
 *     displayName: "Admin",
 *     entityTypeDisplayName: "Runtime Groups",
 * });
 * ```
 */
export function getRole(args: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("konnect:index/getRole:getRole", {
        "displayName": args.displayName,
        "entityTypeDisplayName": args.entityTypeDisplayName,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    /**
     * **(Required, String)** The display name of the Role. Uses equality.
     */
    displayName: string;
    /**
     * **(Required, String)** The display name of the role entity type. Must be `Runtime Groups` or `Services`
     */
    entityTypeDisplayName: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    /**
     * **(String)** The description of the role.
     */
    readonly description: string;
    readonly displayName: string;
    readonly entityTypeDisplayName: string;
    /**
     * **(String)** The name of the role entity type.
     */
    readonly entityTypeName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * **(String)** The name of the role.
     */
    readonly name: string;
}
/**
 * Represents a role
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as konnect from "@pulumi/konnect";
 *
 * const example = konnect.getRole({
 *     displayName: "Admin",
 *     entityTypeDisplayName: "Runtime Groups",
 * });
 * ```
 */
export function getRoleOutput(args: GetRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleResult> {
    return pulumi.output(args).apply((a: any) => getRole(a, opts))
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    /**
     * **(Required, String)** The display name of the Role. Uses equality.
     */
    displayName: pulumi.Input<string>;
    /**
     * **(Required, String)** The display name of the role entity type. Must be `Runtime Groups` or `Services`
     */
    entityTypeDisplayName: pulumi.Input<string>;
}

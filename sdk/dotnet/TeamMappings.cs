// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace johnharris85.Konnect
{
    /// <summary>
    /// Represents the mappings between an external identity provider group and a Konnect team
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Konnect = johnharris85.Konnect;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var team = new Konnect.Team("team", new()
    ///     {
    ///         Description = "testing",
    ///     });
    /// 
    ///     var example = new Konnect.TeamMappings("example", new()
    ///     {
    ///         Mappings = new[]
    ///         {
    ///             new Konnect.Inputs.TeamMappingsMappingArgs
    ///             {
    ///                 Group = "external IdP group",
    ///                 TeamIds = new[]
    ///                 {
    ///                     team.Id,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Team mappings can be imported using a proper value of `id` as described above
    /// </summary>
    [KonnectResourceType("konnect:index/teamMappings:TeamMappings")]
    public partial class TeamMappings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// **(Optional, set{mapping})** Configuration block for a mapping.  Can be specified multiple times for each mapping.  Each block supports the fields documented below.
        /// </summary>
        [Output("mappings")]
        public Output<ImmutableArray<Outputs.TeamMappingsMapping>> Mappings { get; private set; } = null!;


        /// <summary>
        /// Create a TeamMappings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamMappings(string name, TeamMappingsArgs? args = null, CustomResourceOptions? options = null)
            : base("konnect:index/teamMappings:TeamMappings", name, args ?? new TeamMappingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamMappings(string name, Input<string> id, TeamMappingsState? state = null, CustomResourceOptions? options = null)
            : base("konnect:index/teamMappings:TeamMappings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/johnharris85/pulumi-konnect",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamMappings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamMappings Get(string name, Input<string> id, TeamMappingsState? state = null, CustomResourceOptions? options = null)
        {
            return new TeamMappings(name, id, state, options);
        }
    }

    public sealed class TeamMappingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("mappings")]
        private InputList<Inputs.TeamMappingsMappingArgs>? _mappings;

        /// <summary>
        /// **(Optional, set{mapping})** Configuration block for a mapping.  Can be specified multiple times for each mapping.  Each block supports the fields documented below.
        /// </summary>
        public InputList<Inputs.TeamMappingsMappingArgs> Mappings
        {
            get => _mappings ?? (_mappings = new InputList<Inputs.TeamMappingsMappingArgs>());
            set => _mappings = value;
        }

        public TeamMappingsArgs()
        {
        }
        public static new TeamMappingsArgs Empty => new TeamMappingsArgs();
    }

    public sealed class TeamMappingsState : global::Pulumi.ResourceArgs
    {
        [Input("mappings")]
        private InputList<Inputs.TeamMappingsMappingGetArgs>? _mappings;

        /// <summary>
        /// **(Optional, set{mapping})** Configuration block for a mapping.  Can be specified multiple times for each mapping.  Each block supports the fields documented below.
        /// </summary>
        public InputList<Inputs.TeamMappingsMappingGetArgs> Mappings
        {
            get => _mappings ?? (_mappings = new InputList<Inputs.TeamMappingsMappingGetArgs>());
            set => _mappings = value;
        }

        public TeamMappingsState()
        {
        }
        public static new TeamMappingsState Empty => new TeamMappingsState();
    }
}
